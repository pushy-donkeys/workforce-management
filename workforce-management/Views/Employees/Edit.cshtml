@model workforceManagement.Models.ViewModels.EmployeeEditViewModel

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<form asp-action="Edit">
    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Emp.EmployeeId" />
        <div class="form-group">
            <label asp-for="Emp.Firstname" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Emp.Firstname" class="form-control" />
                <span asp-validation-for="Emp.Firstname" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Emp.Lastname" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Emp.Lastname" class="form-control" />
                <span asp-validation-for="Emp.Lastname" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Emp.Startdate" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Emp.Startdate" class="form-control" />
                <span asp-validation-for="Emp.Startdate" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Emp.DepartmentId" class="control-label col-md-2"></label>
            <div class="col-md-10">
                <select asp-for="Emp.DepartmentId" class="form-control" asp-items="ViewBag.DepartmentId"></select>
                <span asp-validation-for="Emp.DepartmentId" class="text-danger"></span>
            </div>
        </div>
        @{
            List<SelectListItem> trainitems3 = new List<SelectListItem>();

            foreach (var x in Model.past)
            {
                trainitems3.Add(new SelectListItem
                {
                    Text = x.Name,
                    Value = x.TrainingProgramId.ToString()

                });

            }
        }
        @*@Html.DropDownList(
        "Past training Programs", trainitems3, "Past Programs")*@
        <h3>Past Training Programs</h3>
        @foreach (var x in trainitems3)
        {
            @x.Text
            <br />
        }

        @{
            List<SelectListItem> trainitems = new List<SelectListItem>();
            foreach (var x in Model.future)
            {
                trainitems.Add(new SelectListItem
                {
                    Text = x.Name,
                    Value = x.TrainingProgramId.ToString()

                });
            }
        }
        @Html.DropDownList(
        "Available training Programs", trainitems, "Available Programs")

        @{
            List<SelectListItem> trainitems2 = new List<SelectListItem>();

            foreach (var x in Model.current)
            {
                trainitems2.Add(new SelectListItem
                {
                    Text = x.Name,
                    Value = x.TrainingProgramId.ToString()

                });
            }
        }
        @Html.DropDownList(
        "Current training Programs", trainitems2, "Current Programs")


   






        @{ 
            List<SelectListItem> compitems = new List<SelectListItem>();
            foreach(var x in Model.Comp)
            {
                compitems.Add(new SelectListItem
                {
                    Text = x.Make,
                    Value = x.ComputerId.ToString()

                });
            }
        }
        @Html.DropDownList(
        "Computers", compitems, "Make a selection")
    
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
